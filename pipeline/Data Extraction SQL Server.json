{
	"name": "Data Extraction SQL Server",
	"properties": {
		"activities": [
			{
				"name": "Fetch Configuration",
				"description": "Fetches configuration from metastore. ",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from src_config where active_flag = 'Y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Metastore",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachSourceObject",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Fetch Configuration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Fetch Configuration').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Extract Data from Source to Sink",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{item().source_schema}.@{item().source_object_name}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "AdventureWorks",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "Bronze",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@item().source_name ",
											"type": "Expression"
										},
										"filename": {
											"value": "@concat(replace(item().source_object_name,'.txt',''), utcnow(), '.csv')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Audit Log",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Extract Data from Source to Sink",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_audit_log_pipelines]",
								"storedProcedureParameters": {
									"errors": {
										"value": {
											"value": "@activity('Extract Data from Source to Sink').output.errors",
											"type": "Expression"
										},
										"type": "String"
									},
									"execDate": {
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"pipeline_name": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"RowsCopied": {
										"value": {
											"value": "@activity('Extract Data from Source to Sink').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"RowsRead": {
										"value": {
											"value": "@activity('Extract Data from Source to Sink').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"source": {
										"value": {
											"value": "@item().source_object_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"target": {
										"value": {
											"value": "@activity('Extract Data from Source to Sink').filename",
											"type": "Expression"
										},
										"type": "String"
									},
									"throughput": {
										"value": {
											"value": "@activity('Extract Data from Source to Sink').output.throughput",
											"type": "Expression"
										},
										"type": "Decimal"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Metastore",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "Data Extraction Component"
		},
		"annotations": [],
		"lastPublishTime": "2022-01-22T10:22:11Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}